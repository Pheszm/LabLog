<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////B///
        /xv///8f////H////xr///8G////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+/v6AP//
        /xnQyMOZpZWM15+OhNufjoTbppeO19PLx5P///8V/fz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wBUNiUA29XSgHZeUP9MLBr/TC0b/0wsGv9MLRv/emNW/+Da13aklIsA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP///wD///8M+/r5OPr6
        +Tv///8O////AP///wi6rqe6UjQi/29WSP2llYzipJSL42xSRP1VNyb/wLWusP///wX///8A////C/39
        /TL+/f0w////Cf///wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD8/PwA////Fc7G
        wZ+QfXLyjnpv9Me9t7D9/Pw0////QaWWjeFMLRv/mIZ76f///zv///9Bk4B17U0uHP+rnJTb////PP7+
        /i7Lwbypkn9075WDeO7SysWX////E/39/QD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A/Pz8AP//
        /xXMw76lcVlK/koqGP9KKxj/YUY2/6KSieeXhHrtYEU1/0wtG/+snZXQ////Ev///xanmI/WSywa/2JH
        N/+Zh33rp5iP5GRJOv9KKhj/SioY/3VdT/3QyMOf////Ev39/QD///8AAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8Jz8fCnXFZS/5MLBr/h3Jm9pyLgfBaPSz/SisZ/0ssGv9eQTH/hnFl/NTNyZH///8C////BNHJ
        xJiEbmL9XUAw/0ssGv9LLBr/Vjko/5WDePSDbWD4SywZ/3VdT/7Ty8aX////CP///wAAAAAAAAAAAAAA
        AAAAAAAA/Pv7AP///zGUgXbtSioY/4ZxZfnj3tt7+vn5RLuwqcN/aVz8l4V76szDvqPw7exU////Ef7+
        /gD+/v0A////E+/s6lbLwr2llYN47ntkV/+1qaHN9/X0Tt/Z1oGCbWD6SioY/5aEeez///8w/Pz7AAAA
        AAAAAAAAAAAAAP///wD8/PsA////MJaDeexLKxn/kH1x9/Px8Ffl4N0A////HPf19Wr7+vpI////Bf//
        /wD///8D////Cv///wr///8C////AP///wX49/c88e/tYf39/R////8F9/b1WZSBdvVLKxn/lIJ37f//
        /zL8+/sA////AAAAAADj39wA8u/uM9DIw5HNxL+luKyl71o+Lf9VNyb/p5iQ3srBvKLGvLemsaSczrSn
        n8fIv7mex764ocO4squ1qaHBtqqjwMS6tKjIvrmgyL65nMe9uJrGvbecx764nb6zrbygj4buWDsq/1g7
        Kv+2qqPwzcS/qdLKxY719PMp8O3sAP///wPJwLujmIZ7/6GPhP+YhXj/i3Vn/4lzZf+TfnH/mYV4/5aC
        dP+gjYH/pZSJ/5yKfv+WgXT/l4N2/5J+cP+OeGr/mYZ5/5iEd/+ciX3/n42B/5iEdv+bh3v/loJ1/5mE
        dv+Pemz/k39y/5eDdv+di3//mIZ7/9HJxY4AAAAA////B7+0rbaejID/u6yg/7usof+lkoP/o4+A/6OP
        gP+ijn7/nop5/6mWh/+/sqf/qpiJ/5yHd/+kkYL/pJCA/6CMfP+mk4T/oIx8/7anmv+yopX/oYx8/6WS
        gv+kkIH/pZKD/6WRgv+nlIX/pZKD/6aThP+ejID/w7mzpf///wL///8Ys6We0KKQhP+/saX/wrWr/8W4
        r//EuK7/uqyi/5qHe/+/sqf/yb61/8e6sf+2p5r/tKOW/8O2rf+nl4z/vbCm/8S3rf/Dtqz/x7yy/8q/
        t/+/sqf/wrWr/8O2q//IvLL/x7qx/8K1q//Et63/v7Cl/6SSh/++sqy0////B////ympmpLjx7u0/9jQ
        yv/Dt67/vbCl/9TLxP/AtKv/gWtd/9PKw//Rx7//3NTO/9DGvv/TysL/3NXP/39oW/+ikYb/4NnU/8i9
        tf/As6r/wbSq/9jQyv/Lwbn/08rD/9fPyP/Z0cv/0sjB/8a7sv/e1tH/uaui/7WooMn///8R////Kqma
        keTSysT/2tLN/5OAdP+Wg3j/493Z/9bNxv+3qJz/493Z/93W0P/r5uP/xbiu/83Cuv/s6OX/f2lb/6SU
        iv/v7On/oZCG/456b//KwLn/5uHd/4l0Z//Jv7j/5uDc/+nl4f/Btq7/hnFk/+Xg2/+8sKj/q5yU1f//
        /xr///8qqZqR5NLKxP/Vzcj/qpuS/6aWjf/g2tX/3NTO/8i8s//l4Nv/3dXP/+vn5P/GubD/zsS8/97X
        0v97Y1X/p5eN/+7q6P+llYv/qZmQ/8i9tv/g2dT/loN1/8q/uP/l4Nv/6eTg/8O4r/+XhHb/yr+2/6CO
        g/+ikoja////Hv///yiomZDjwrev/8W6s/+un5f/qZmQ/8zCu//Qxr//wrWs/9XNx//Pxr7/2tLN/8e7
        sv/Mwrr/xLix/4l0aP+nl43/2NDL/5+OhP+qm5P/u66l/9jRy//EuK7/z8W+/9LJwv/Vzcf/0Me//8e7
        sv/GurD/p5aL/6iZkdz///8g////H6WVjNlkSTn/ZUo6/31mWf+DbWH/i3Zq/6eXjvinl472nYyB+nBX
        SP9rUUH/gWte/56Lf/+Uf3L/hnFk/39pW/+Vgnr/iXVs/4dyZf9oTj7/c1pL/6CPhfqmloz2ppeN+I98
        cP9uVEX/bVRF/21URf9lSjr/p5iP1v///xv///8F0cnFlnlhVP9WOCf/Ti8d/0oqGP+Fb2P98e7tg/Ty
        8Dvk4N2GdFtN/Vc6KP+eh3z/s6CZ/7Oel/+hjIH/jnp//45pgf+LaoH/hnJ2/1Q2JP94YFL85+PhgfPy
        8Dvw7uyHg25h/kgpFv9MLBr/UjQj/3VdT//RycSY////Bfz8+wD///8V4NvYdsK4sq2rnZTbX0Mz/19E
        M//NxL+b////Af///xyypJ3NemFU/8SurP/Zz8//3M/Q/8Wys/+efpv/vZSb/5aCg/+OdI7/cFhM/7ap
        osj///8Y////AsrBvKBeQTH/YEU1/6aWjd+8sKm53NbSf////xj7+voAAAAAAP///wD///8A////Afz8
        +0ORfnPwSywa/5qIfuj///8z6+flAO3q6VSikYf2x7Gx/8+1uP/Ptrn/zbu+/6WKsP+UaJv/rI6a/5yB
        nf+gkYrx8/DvSu3q6AD9/f04l4V760wsGv+Vg3nt////Qf///wX///8A////AAAAAAAAAAAAAAAAAP//
        /wDz8fAA////PJyLgexKKhj/gmxf+/Px71Dy8O8A////Eb+0rcCgjIT/vqal/7ylpP+IcGT/f2pv/5R2
        nv+bgJ7/kYCD/8W7tbH///8K6eXiAO3q6F96Y1b+Sywa/6eXjuT///8t+fn4AP///wAAAAAAAAAAAAAA
        AAAAAAAA//7+AP///xHCuLK4XkIx/1s+Lv+9squ/////Fv38/ADj3twA8/HwM8K4srSrnJTnrJ6V4q6g
        mMyuoJfOqZyV5qmblebGvLau9/X1K+7r6QD6+fkA////IbOmntBVNyb/Zks8/8zDvqX///8J////AAAA
        AAAAAAAAAAAAAAAAAAD29PMA+fj4Qol0aPZKKxn/no2D7/38/ELu7OoA+vn4J+zo5mP39fQ0////DP7+
        /iL//v4i////D////xH+/v4l/v7+Iv///wv39fQ07+zqW/z7+x7n4+AA9fPyUpOAdfVKKhj/k4F27v//
        /zT8+/sAAAAAAAAAAAAAAAAAAAAAAPb19AD6+vlAjHhs9EoqGP+KdWr25eDddvHv7lmvoZnXeWJV/5qI
        furPxsGd8e/uTP///w3///8A/v7+AP///xHx7+1PzsXAn5mHfep+Z1r/t6uky/j29kri3dl8hXBk+Uoq
        GP+UgXbv////Nfz7+wAAAAAAAAAAAAAAAAAAAAAA////AP///w7Mw76nb1VH/0wtG/+Ic2f3j3xw9VM1
        I/9MLBr/TCwa/2BENP+Ldmv62dLPhAAAAAD///8G0MjDnIZwZPxfQzP/Sywa/0orGf9XOin/mIZ88oZx
        ZfdMLBr/cllL/tDIw53///8K////AAAAAAAAAAAAAAAAAAAAAAD///8A/Pv7AP///xnKwLusb1ZH/0kq
        F/9KKhj/alBB/quck+GTgHbuXUEx/08wHv+ypZ3H////DP///xujkoncSisZ/2FGNv+Ugnfuo5OK52NI
        OP9KKhj/SioY/3JaS/7NxL+l////Ff38/AD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A/Pv7AP//
        /xjNxL+ik4B18JaEeu3QyMOd////J////0mejYPnSywa/56Ng+P///8x////RI56bvBOLx3/sKKa2P//
        /z/+/f0yyL+6rI98cfKRfnPxz8bCnv///xX9/PwA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wz+/v0y/v7+L////wn///8A////DLSnn8RQMR//dFxO/KiZkN6nl47halBB/lg7
        Kv/Fu7Wm////Av///wD///8N+/v6N/v7+jb///8L////AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAA1s7Kjm9WSP9LLBn/TC0b/0ws
        Gv9MLBr/fmda/eTf3G3Ata8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////APj39gD///8gy8K9paCQ
        ht2bin/gm4p/4KSUi9rUzMiS////Ev39/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP//
        /wD///8J////IP///yT///8k////Hv///wb///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///wD///8A///CAEP/gAAB/wAAAP4AAAB+ABgAfghCAHgAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHgQAIH8EACD+BgBgfggAEH4AGAB+AB
        AAfwAAAP+AAAH/wgBD//8A////AP///4H/8=
</value>
  </data>
</root>